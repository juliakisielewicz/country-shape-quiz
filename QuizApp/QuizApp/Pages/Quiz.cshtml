@page
@model QuizApp.Pages.QuizModel
@{
    ViewData["Title"] = "Quiz";
}
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> userManager

@functions{

    void displayOptions(int nr, int place, Models.Country correct, Models.Country incorrect1, Models.Country incorrect2)
    {
        var tmp = "tmp";
        switch(place)
        {
            case 1:
                <input id="correct" type="hidden" name="correct_answer" value="@correct.id" checked>
                <input id="correct" type="hidden" name="user_id" value="@tmp" checked>
                <br>
                <input id="correct" type="radio" name="selected_answer" value="@correct.id" required="required"> @correct.country_name
                <br>
                <input id="incorrect1" type="radio" name="selected_answer" value="@incorrect1.id" required="required"> @incorrect1.country_name
                <br>
                <input id="incorrect2" type="radio" name="selected_answer" value="@incorrect2.id" required="required"> @incorrect2.country_name
                <br>
                break;

            case 2:
                <input id="correct" type="hidden" name="correct_answer" value="@correct.id" checked>
                <input id="correct" type="hidden" name="user_id" value="@tmp" checked>
                <br>
                <input id="incorrect1" type="radio" name="selected_answer" value="@incorrect1.id" required="required"> @incorrect1.country_name
                <br>
                <input id="correct" type="radio" name="selected_answer" value="@correct.id" required="required"> @correct.country_name
                <br>
                <input id="incorrect2" type="radio" name="selected_answer" value="@incorrect2.id" required="required"> @incorrect2.country_name
                <br>
                break;

            case 3:
                <input id="correct" type="hidden" name="correct_answer" value="@correct.id" checked>
                <input id="correct" type="hidden" name="user_id" value="@tmp" checked>
                <br>
                <input id="incorrect1" type="radio" name="selected_answer" value="@incorrect1.id" required="required"> @incorrect1.country_name
                <br>
                <input id="incorrect2" type="radio" name="selected_answer" value="@incorrect2.id" required="required"> @incorrect2.country_name
                <br>
                <input id="correct" type="radio" name="selected_answer" value="@correct.id" required="required"> @correct.country_name
                <br>
                break;

            default:
                break;
        }
    }
} 

@{

    var userResults = Model.Results.Where(c => c.user_id == userManager.GetUserId(User)).ToList();
    var questionNumber = userResults.Count() + 1;
    var countriesCount = Model.Country.Count();
    var imagePath = "";
    var altText = "Shape of the country";

    Random rnd = new Random();

    //place of the correct answer
    var place = rnd.Next(1, 4);

    //ids of 3 drawn countries
    var n1 = 0;
    var n2 = 0;
    var random_id = 1;

    //every option in current game will be unique 
    List<int> ids = new List<int>();
    foreach(var res in userResults)
    {
        ids.Add(@res.correct_answer);
        ids.Add(@res.selected_answer);
    }

    //draw id of correct answer
    do
    {
        random_id = rnd.Next(1, countriesCount + 1);
    } while (ids.Contains(random_id));

    //draw ids of incorrect answers
    do
    {
        n1 = rnd.Next(1, countriesCount + 1);
    } while (n1 == @random_id || @ids.Contains(n1));

    do
    {
        n2 = rnd.Next(1, countriesCount + 1);
    } while (n2 == @random_id || n2 == n1 || @ids.Contains(n2));

    //find country with id drawn as the correct
    var correct = Model.Country.Where(c => c.id == @random_id).First();
    var incorrects = Model.Country.Where(c => c.id == n1 || c.id == n2).ToArray();

    imagePath = "~/css/images/" + @correct.image_name;
}

<div class="text-center">
    <h4>Guess the names of 5 randomly selected countries or territories: </h4>
    <br>
    <form class="questions" method="post">

        <div class="question">
            <br>
            <p>@questionNumber ) 
            <img src="@Url.Content(imagePath)" alt="@altText" /> 
            </p>
             
            <div class="answers">
                @{
                    displayOptions(@questionNumber, @place, @correct, @incorrects[0], @incorrects[1]);
                }
            </div>
            <br>
        </div>
        <br>
        <input type="submit" value="Submit" asp-page-handler="Submit"/>
    </form>


</div>

