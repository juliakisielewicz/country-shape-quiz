@page
@model QuizApp.Pages.QuizModel
@{
    ViewData["Title"] = "CS Quiz";
}


@functions{

    void displayOptions(int nr, int place, Models.Country correct, Models.Country incorrect1, Models.Country incorrect2)
    {
        switch(place)
        {
            case 1:
                <input id="correct" type="hidden" name="correct_answer" value="@correct.id" checked>
                <br>
                <input id="correct" type="radio" name="selected_answer" value="@correct.id" required="required"> @correct.country_name
                <br>
                <input id="incorrect1" type="radio" name="selected_answer" value="@incorrect1.id" required="required"> @incorrect1.country_name
                <br>
                <input id="incorrect2" type="radio" name="selected_answer" value="@incorrect2.id" required="required"> @incorrect2.country_name
                <br>
                break;

            case 2:
                <input id="correct" type="hidden" name="correct_answer" value="@correct.id" checked>
                <br>
                <input id="incorrect1" type="radio" name="selected_answer" value="@incorrect1.id" required="required"> @incorrect1.country_name
                <br>
                <input id="correct" type="radio" name="selected_answer" value="@correct.id" required="required"> @correct.country_name
                <br>
                <input id="incorrect2" type="radio" name="selected_answer" value="@incorrect2.id" required="required"> @incorrect2.country_name
                <br>
                break;

            case 3:
                <input id="correct" type="hidden" name="correct_answer" value="@correct.id" checked>
                <br>
                <input id="incorrect1" type="radio" name="selected_answer" value="@incorrect1.id" required="required"> @incorrect1.country_name
                <br>
                <input id="incorrect2" type="radio" name="selected_answer" value="@incorrect2.id" required="required"> @incorrect2.country_name
                <br>
                <input id="correct" type="radio" name="selected_answer" value="@correct.id" required="required"> @correct.country_name
                <br>
                break;

            default:
                break;
        }
    }
} 

<div class="text-center">
    <h1 class="display-4">Welcome to Country Shape Quiz</h1>
    <h4>Guess the names of 10 randomly selected countries or territories: </h4>
    <br>

    @{
        var questionNumber = Model.Results.Count() + 1;
        var countriesCount = Model.Country.Count();

        Random rnd = new Random();
        var n1 = 0;
        var n2 = 0;
        var place = 0;
        var random_id = 1;
        List<int> ids = new List<int>();

        var imagePath = "";
        var altText = "Shape of the country";

        //create an array containing id numbers of 10 selected countries 

        //draw an id which wasn't already drew in that game

        /*
        int[] ids = new int[1];
            var number = 0;
                for(var i=0; i<ids.Length; i++)
                {
                do
                {
                number = rnd.Next(1, countriesCount + 1);
            } while (ids.Contains(number));

            ids[i] = number;
        }
        */

        
        place = rnd.Next(1, 4);

        foreach(var res in Model.Results)
        {
            ids.Add(@res.correct_answer);
            ids.Add(@res.selected_answer);
        }

        do
            {
                random_id = rnd.Next(1, countriesCount + 1);
            } while (ids.Contains(random_id));

    }

    <form class="questions" method="post">
    @foreach (var cnt in Model.Country) {

            if(@cnt.id == @random_id)
            {
                imagePath = "~/css/images/" + @cnt.image_name;

                do
                {
                    n1 = rnd.Next(1, countriesCount + 1);
                } while (n1 == @cnt.id || @ids.Contains(n1));

                do
                {
                    n2 = rnd.Next(1, countriesCount + 1);
                } while (n2 == @cnt.id || n2 == n1 || @ids.Contains(n2));

                //Dictionary<int, string> incorrects = new Dictionary<int, string>();
                Dictionary<string, Models.Country> random_countries = new Dictionary<string, Models.Country>();

                @foreach  (var country in Model.Country)
                {
                    if(@country.id == random_id)
                    {
                        random_countries.Add("correct", @country);
                    }
                    else if(@country.id == n1)
                    {
                        random_countries.Add("incorrect1", @country);
                    }
                    else if(@country.id == n2)
                    {
                        random_countries.Add("incorrect2", @country);
                    }

                    if(@random_countries.Count == 3)
                    {
                        break;
                    }
                }

                <div class="question" style="background-color:khaki">
                <br>
                <p>@questionNumber ) 
                <img src="@Url.Content(imagePath)" alt="@altText" /> </p>
             
                <div class="answers">
                @{
                    displayOptions(@questionNumber, @place, @random_countries["correct"], @random_countries["incorrect1"], @random_countries["incorrect2"]);
                }
                </div>
                <br>
                </div>
                <br>

            }

    }
    <input type="submit" value="Submit" asp-page-handler="Submit"/>
    </form>


</div>

